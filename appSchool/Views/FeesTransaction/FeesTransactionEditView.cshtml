@using appSchool.Repositories
@using appSchool.ViewModels
@model modelStudentFeesReceipt

@Html.Hidden("StudentID")

<div class="mainbox">

    <div class="box60">

 <div class="mainbox">
 

    <div class="box100">

    <div  >
    @Html.DevExpress().LabelFor(
            model=> model.EnrollmentNo,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Enrollment No";
                settings.AssociatedControlName = "EnrollmentNo";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model=> model.EnrollmentNo,
            settings => {
                settings.Name = "EnrollmentNo";    
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.MaskSettings.Mask = "(AAA)-000-0000";
                // settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.None;
                settings.ReadOnly = true;
                
                
            }).GetHtml()
    
</div>

    <div >

    @Html.DevExpress().LabelFor(
            model=> model.StudentName,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Student Name";
                settings.AssociatedControlName = "StudentName";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model=> model.StudentName,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.ReadOnly = true;
                
            }).GetHtml()
  
    </div>

    <div  >

    @Html.DevExpress().LabelFor(
            model=> model.FatherName,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Father Name";
                settings.AssociatedControlName = "FatherName";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model=> model.FatherName,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.ReadOnly = true;
                
            }).GetHtml()
  
    </div>
    
    <div  >

    @Html.DevExpress().LabelFor(
            model=> model.MobileNo,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Mobile No.";
                settings.AssociatedControlName = "MobileNo";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model=> model.MobileNo,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.ReadOnly = true;
                
            }).GetHtml()
  
    </div>

    <div >
        @Html.Hidden("ClassID")
    @Html.DevExpress().LabelFor(
            model=> model.Class,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Class";
                settings.AssociatedControlName = "Class";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model=> model.Class,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.ReadOnly = true;
                
            }).GetHtml()
  
    </div>

            
        </div>
    <div class="box100">
 
        
     <div >
    @Html.DevExpress().LabelFor(
            model=> model.ReceiptNo,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "ReceiptNo.";
                settings.AssociatedControlName = "ReceiptNo";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model=> model.ReceiptNo,
            settings => {
                settings.Name = "ReceiptNo";    
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.MaskSettings.Mask = "(AAA)-000-0000";
                // settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.None;
                settings.ReadOnly = true;
              
                
                
            }).GetHtml()
    
</div>

     <div  >
    @Html.DevExpress().LabelFor(
            model=> model.ReceiptDate,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Receipt Date";
                settings.AssociatedControlName = "ReceiptDate";
                
            }
        ).GetHtml()
      @Html.DevExpress().DateEditFor(
                model=> model.ReceiptDate,
                settings => {
                    settings.Name = "ReceiptDate";
                    settings.ControlStyle.CssClass = "editor";
                    settings.Properties.NullText = "dd MMM yyyy";
                    settings.Properties.EditFormat = EditFormat.Custom;
                    settings.Properties.MaxDate = DateTime.Now;
                    settings.Properties.EditFormatString = "dd MMM yyyy";
                    settings.Date = DateTime.Now;
                    //settings.ShowModelErrors = true;
                    //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   // settings.ReadOnly = true;
                    //settings.Enabled = false;
                
}
            ).GetHtml()
</div>

     <div  >


    @Html.Hidden("TermId")

    @Html.DevExpress().LabelFor(
            model=> model.TermName,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Term Name";
                settings.AssociatedControlName = "TermName";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model=> model.TermName,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.ReadOnly = true;
                
            }).GetHtml()
  
    </div>

      
     <div  style="width:100%;">

        <table><tr>
            <td>
                   @*  @Html.DevExpress().RadioButtonFor(
       model=> model.Mode,
            settings =>
            {
                settings.Name = "ModeC";
                settings.Text = "Cash";
                settings.GroupName = "PayMode";
                settings.Checked = true;
            }).Bind(Model.Mode).GetHtml()*@

                  @Html.DevExpress().Label(
   settings =>{
       settings.Text = "Mode";
       settings.AssociatedControlName = "Pay Mode";
     }).GetHtml()  

  @Html.DevExpress().ComboBoxFor(
            model=> model.Mode,
                    settings => {
                        settings.Name = "Mode";
                       // settings.ControlStyle.CssClass = "editor";
                        settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                        settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                        settings.Properties.TextField = "Value";
                        settings.Properties.ValueField = "Key";
                        settings.SelectedIndex = 0;
                      
                        //settings.ShowModelErrors = true;
                        //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        settings.Properties.ClientSideEvents.SelectedIndexChanged = "feesTransactionController.SelectionChangePaymode";
                        
                    }
                ).BindList(cCommon.GetPayModeListForFee()).GetHtml()

                



            </td>
            <td>
                
  @*    @Html.DevExpress().RadioButtonFor(
       model=> model.Mode,
            settings =>
            {
                settings.Name = "ModeB";
                settings.Text = "Cheque";
                settings.GroupName = "PayMode";
                settings.Checked = false;
            }).Bind(Model.Mode).GetHtml()*@

            </td>
               </tr></table>
     
  
    </div>



     <div >

           @Html.DevExpress().Label(
   settings =>{
       settings.Text = "Cheque No.";
       settings.AssociatedControlName = "ChequeNo";
     }).GetHtml()  
     
     @Html.DevExpress().TextBoxFor(
             model=> model.ChequeNo ,
            settings =>{
                settings.ShowModelErrors = true;
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.Name = "ChequeNo";
                settings.ReadOnly = true;
                settings.Properties.EnableClientSideAPI = true;
            }).GetHtml()


    </div>

     <div >  

           @Html.DevExpress().LabelFor(
            model=> model.ChequeDate,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Cheque Date";
                settings.AssociatedControlName = "ChequeDate";
                
            }
        ).GetHtml()
      @Html.DevExpress().DateEditFor(
                model=> model.ChequeDate,
                settings => {
                    settings.Name = "ChequeDate";
                    settings.ControlStyle.CssClass = "editor";
                    settings.Properties.NullText = "dd MMM yyyy";
                    settings.Properties.EditFormat = EditFormat.Custom;
                    settings.Properties.MaxDate = DateTime.Now;
                    settings.Properties.EditFormatString = "dd MMM yyyy";
                    settings.ReadOnly = false;
                    //settings.ShowModelErrors = true;
                    //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   // settings.ReadOnly = true;
                    //settings.Enabled = false;
                
}
            ).GetHtml()


     </div>

     <div  >
     @Html.DevExpress().Label(
   settings =>{
       settings.Text = "Bank";
       settings.AssociatedControlName = "BankName";
     }).GetHtml()  
     
     @Html.DevExpress().TextBoxFor(
             model=> model.BankName ,
            settings =>{
                settings.ShowModelErrors = true;
                settings.ControlStyle.CssClass = "editor";
                settings.ShowModelErrors = true;
                settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.Name = "BankName";
                settings.ReadOnly = true;
                settings.Properties.EnableClientSideAPI = true;
            }).GetHtml()
</div>

     <div  >
   @Html.DevExpress().Label(
   settings =>{
       settings.Text = "Branch";
       settings.AssociatedControlName = "BranchName";
     }).GetHtml()  
     
     @Html.DevExpress().TextBoxFor(
             model=> model.BranchName ,
            settings =>{
                settings.ShowModelErrors = true;
                settings.ControlStyle.CssClass = "editor";
                settings.ShowModelErrors = true;
                settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.Name = "BranchName";
                settings.ReadOnly = true;
                settings.Properties.EnableClientSideAPI = true;
            }).GetHtml()
</div>

        </div>
    <div class="box100">

     <div >

    @Html.DevExpress().LabelFor(
            model=> model.TermTotal,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Term Total";
                settings.AssociatedControlName = "TermTotal";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.TermTotal,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.ReadOnly = true;
                
            }).GetHtml()

    </div>

     <div  >

    @Html.DevExpress().LabelFor(
            model=> model.FineAmount,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Fine Amount";
                settings.AssociatedControlName = "FineAmount";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.FineAmount,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.ReadOnly = false;
                settings.Properties.ClientSideEvents.ValueChanged = "feesTransactionController.Gettotal";
                
            }).GetHtml()

    </div>

     <div >

    @Html.DevExpress().LabelFor(
            model=> model.OtherAmount,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Other Amount";
                settings.AssociatedControlName = "OtherAmount";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.OtherAmount,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                settings.Properties.ClientSideEvents.ValueChanged = "feesTransactionController.Gettotal";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.ReadOnly = false;
                
            }).GetHtml()

    </div>

         <div >

    @Html.DevExpress().LabelFor(
            model=> model.SubTotal,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Sub Total";
                settings.AssociatedControlName = "SubTotal";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.SubTotal,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                settings.Properties.ClientSideEvents.ValueChanged = "feesTransactionController.Gettotal";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.ReadOnly = true;
                
            }).GetHtml()

    </div>




        <div>   @Html.DevExpress().Label(
   settings =>{
       settings.Text = "DiscountType";
       settings.AssociatedControlName = "Discount Type";
     }).GetHtml()  

  @Html.DevExpress().ComboBoxFor(
            model=> model.DiscountType,
                    settings => {
                        settings.Name = "DiscountType";
                        settings.ControlStyle.CssClass = "editor";
                        settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                        settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                        settings.Properties.TextField = "Value";
                        settings.Properties.ValueField = "Key";
                        settings.SelectedIndex = 0;
                        settings.Properties.ClientSideEvents.SelectedIndexChanged = "feesTransactionController.SelectionChangeDiscountType";
                        //settings.ShowModelErrors = true;
                        //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    }
                ).BindList(cCommon.GetDiscountTypeList()).GetHtml()
</div>


          <div >

    @Html.DevExpress().LabelFor(
            model=> model.DiscountPercent,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Discount Percent";
                settings.AssociatedControlName = "DiscountPercent";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.DiscountPercent,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                 settings.Properties.ClientSideEvents.ValueChanged = "feesTransactionController.GetDiscount";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.ReadOnly = false;
                
            }).GetHtml()

    </div>

          <div >

    @Html.DevExpress().LabelFor(
            model=> model.DiscountAmount,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "Discount Amount";
               
                settings.AssociatedControlName = "DiscountAmount";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.DiscountAmount,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                settings.Properties.ClientSideEvents.ValueChanged = "feesTransactionController.Gettotal";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.ReadOnly = false;
                
            }).GetHtml()

    </div>





     <div  >

    @Html.DevExpress().LabelFor(
            model=> model.FinalAmount,
            settings => {
                settings.ControlStyle.CssClass = "label";
                settings.Text = "FinalAmount";
                settings.AssociatedControlName = "FinalAmount";
            }
        ).GetHtml()
    @Html.DevExpress().TextBoxFor(
            model => model.FinalAmount,
            settings => {
                settings.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settings.ReadOnly = true;
                
            }).GetHtml()

    </div>

                <div style="clear:both"><br /></div>
       

   <div class="divSubmit1">

      @if(PermissionFlag._AddFlag==true)
      {
       @Html.DevExpress().Button(
        settings => {
            settings.Name = "btnSaveFeeReceipt";
            settings.ControlStyle.CssClass = "button";
            settings.Text = "Save Receipt";
            
            settings.UseSubmitBehavior = true;
        }).GetHtml()
      }
    </div>
    <div class="divError" >

        @Html.ValidationMessageFor(model=> model.StudentName) 
        @Html.ValidationMessageFor(model=> model.FatherName)  
    </div>

     

         </div>
    </div>

    </div>

     <div class="box40">

                 

    <div class="mainbox">
 

    <div class="box100">



             @Html.Partial("ListHeadView",new  UnitOfWork().StudentFeesDetailService.GetStudentFeesDetailByTermIDandStudentID(Model.StudentID,Model.TermId,int.Parse(Session["SessionID"].ToString()),byte.Parse(Session["CompID"].ToString()),byte.Parse(Session["BranchID"].ToString())))
        </div>
   
    </div>





     </div>


</div>







































@*
@Html.DevExpress().Splitter(settings => {
    settings.Name = "FeesTransactionEditSplitter";
    settings.Orientation = System.Web.UI.WebControls.Orientation.Horizontal;
    settings.Width = System.Web.UI.WebControls.Unit.Pixel(1000);
    settings.Height = System.Web.UI.WebControls.Unit.Pixel(1000);
    settings.Styles.Pane.Paddings.Padding = System.Web.UI.WebControls.Unit.Pixel(0);
    settings.Styles.Pane.Border.BorderWidth = System.Web.UI.WebControls.Unit.Pixel(0);

    settings.ClientSideEvents.PaneResized = "feesTransactionController.splitterResized";
    
    settings.Panes.Add(subpane => {
        subpane.Name = "LeftPane";
        subpane.PaneStyle.CssClass = "leftPane1";
        subpane.ShowCollapseBackwardButton = DefaultBoolean.False;
        subpane.Size = System.Web.UI.WebControls.Unit.Pixel(500);
       // subpane.PaneStyle.Paddings.Padding = System.Web.UI.WebControls.Unit.Pixel(1);
        subpane.SetContent(() => {

            
               
    Html.DevExpress().LabelFor(
            model=> model.EnrollmentNo,
            settingsEnrollmentNo =>
            {
                settingsEnrollmentNo.ControlStyle.CssClass = "label";
                settingsEnrollmentNo.Text = "Enrollment No";
                settingsEnrollmentNo.AssociatedControlName = "EnrollmentNo";
            }
        ).GetHtml();
    @Html.DevExpress().TextBoxFor(
            model=> model.EnrollmentNo,
            settingsEnrollmentNo =>
            {
                settingsEnrollmentNo.Name = "EnrollmentNo";
                settingsEnrollmentNo.ControlStyle.CssClass = "editor";
                //settings.Properties.MaskSettings.Mask = "(AAA)-000-0000";
                // settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.None;
                settingsEnrollmentNo.ReadOnly = true;
                
                
            }).GetHtml();


    @Html.DevExpress().LabelFor(
            model=> model.StudentName,
            settingsStudentName =>
            {
                settingsStudentName.ControlStyle.CssClass = "label";
                settingsStudentName.Text = "Student Name";
                settingsStudentName.AssociatedControlName = "StudentName";
            }
        ).GetHtml();
    @Html.DevExpress().TextBoxFor(
            model=> model.StudentName,
            settingsStudentName =>
            {
                settingsStudentName.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settingsStudentName.ReadOnly = true;
                
            }).GetHtml();
  
  

    @Html.DevExpress().LabelFor(
            model=> model.FatherName,
            settingsFatherName =>
            {
                settingsFatherName.ControlStyle.CssClass = "label";
                settingsFatherName.Text = "Father Name";
                settingsFatherName.AssociatedControlName = "FatherName";
            }
        ).GetHtml();
    @Html.DevExpress().TextBoxFor(
            model=> model.FatherName,
            settingsFatherName =>
            {
                settingsFatherName.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settingsFatherName.ReadOnly = true;
                
            }).GetHtml();
  

    @Html.DevExpress().LabelFor(
            model=> model.MobileNo,
            settingsMobileNo =>
            {
                settingsMobileNo.ControlStyle.CssClass = "label";
                settingsMobileNo.Text = "Mobile No.";
                settingsMobileNo.AssociatedControlName = "MobileNo";
            }
        ).GetHtml();
    @Html.DevExpress().TextBoxFor(
            model=> model.MobileNo,
            settingsMobileNo =>
            {
                settingsMobileNo.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settingsMobileNo.ReadOnly = true;
                
            }).GetHtml();
  
   

    @Html.DevExpress().LabelFor(
            model=> model.Class,
            settingsClass =>
            {
                settingsClass.ControlStyle.CssClass = "label";
                settingsClass.Text = "Class";
                settingsClass.AssociatedControlName = "Class";
            }
        ).GetHtml();
     Html.DevExpress().TextBoxFor(
            model=> model.Class,
            settingsClass =>
            {
                settingsClass.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settingsClass.ReadOnly = true;
                
            }).GetHtml();
  
  
    @Html.DevExpress().LabelFor(
            model=> model.ReceiptNo,
            settingsReceiptNo =>
            {
                settingsReceiptNo.ControlStyle.CssClass = "label";
                settingsReceiptNo.Text = "ReceiptNo.";
                settingsReceiptNo.AssociatedControlName = "ReceiptNo";
            }
        ).GetHtml();
    @Html.DevExpress().TextBoxFor(
            model=> model.ReceiptNo,
            settingsReceiptNo =>
            {
                settingsReceiptNo.Name = "ReceiptNo";
                settingsReceiptNo.ControlStyle.CssClass = "editor";
                //settings.Properties.MaskSettings.Mask = "(AAA)-000-0000";
                // settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.None;
                //settings.ReadOnly = true;
                
                
            }).GetHtml();

    @Html.DevExpress().LabelFor(
            model=> model.ReceiptDate,
            settingsReceiptDate =>
            {
                settingsReceiptDate.ControlStyle.CssClass = "label";
                settingsReceiptDate.Text = "Receipt Date";
                settingsReceiptDate.AssociatedControlName = "ReceiptDate";
                
            }
        ).GetHtml();
      @Html.DevExpress().DateEditFor(
                model=> model.ReceiptDate,
                settingsReceiptDate =>
                {
                    settingsReceiptDate.Name = "ReceiptDate";
                    settingsReceiptDate.ControlStyle.CssClass = "editor";
                    settingsReceiptDate.Properties.NullText = "dd MMM yyyy";
                    settingsReceiptDate.Properties.EditFormat = EditFormat.Custom;
                    settingsReceiptDate.Properties.MaxDate = DateTime.Now;
                    settingsReceiptDate.Properties.EditFormatString = "dd MMM yyyy";
                    settingsReceiptDate.Date = DateTime.Now;
                    //settings.ShowModelErrors = true;
                    //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    settingsReceiptDate.ReadOnly = true;
                    //settings.Enabled = false;
                
}
            ).GetHtml();



    @Html.Hidden("TermId");

    @Html.DevExpress().LabelFor(
            model=> model.TermName,
            settingsTermName =>
            {
                settingsTermName.ControlStyle.CssClass = "label";
                settingsTermName.Text = "Term Name";
                settingsTermName.AssociatedControlName = "TermName";
            }
        ).GetHtml();
    @Html.DevExpress().TextBoxFor(
            model=> model.TermName,
            settingsTermName =>
            {
                settingsTermName.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settingsTermName.ReadOnly = true;
                
            }).GetHtml();
  
   
                     @Html.DevExpress().RadioButtonFor(
       model=> model.Mode,
            settingsRadioButtonFor =>
            {
                settingsRadioButtonFor.Name = "ModeC";
                settingsRadioButtonFor.Text = "Cash";
                settingsRadioButtonFor.GroupName = "PayMode";
                settingsRadioButtonFor.Checked = true;
            }).GetHtml();

           
                
      @Html.DevExpress().RadioButtonFor(
       model=> model.Mode,
            settingsRadioButtonFor =>
            {
                settingsRadioButtonFor.Name = "ModeB";
                settingsRadioButtonFor.Text = "Cheque";
                settingsRadioButtonFor.GroupName = "PayMode";
                settingsRadioButtonFor.Checked = false;
            }).GetHtml();

           
           @Html.DevExpress().LabelFor(
               model => model.ChequeNo,
        settingsChequeNo =>
        {
            settingsChequeNo.Text = "Cheque No.";
            settingsChequeNo.AssociatedControlName = "ChequeNo";
     }).GetHtml();  
     
     @Html.DevExpress().TextBoxFor(
             model=> model.ChequeNo ,
            settingsChequeNo =>
            {
                settingsChequeNo.ShowModelErrors = true;
                settingsChequeNo.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settingsChequeNo.Name = "ChequeNo";
                settingsChequeNo.Width = 200;
                settingsChequeNo.Properties.EnableClientSideAPI = true;
            }).GetHtml();


  

           @Html.DevExpress().LabelFor(
            model=> model.ChequeDate,
            settingsChequeDate =>
            {
                settingsChequeDate.ControlStyle.CssClass = "label";
                settingsChequeDate.Text = "Cheque Date";
                settingsChequeDate.AssociatedControlName = "ChequeDate";
                
            }
        ).GetHtml();
      @Html.DevExpress().DateEditFor(
                model=> model.ChequeDate,
                settingsChequeDate =>
                {
                    settingsChequeDate.Name = "ChequeDate";
                    settingsChequeDate.ControlStyle.CssClass = "editor";
                    settingsChequeDate.Properties.NullText = "dd MMM yyyy";
                    settingsChequeDate.Properties.EditFormat = EditFormat.Custom;
                    settingsChequeDate.Properties.MaxDate = DateTime.Now;
                    settingsChequeDate.Properties.EditFormatString = "dd MMM yyyy";

                    //settings.ShowModelErrors = true;
                    //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    settingsChequeDate.ReadOnly = true;
                    //settings.Enabled = false;
                
}
            ).GetHtml();


      @Html.DevExpress().Label(
          
   settingslbl =>{
       settingslbl.Text = "Bank";
       settingslbl.AssociatedControlName = "BankName";
     }).GetHtml();  
     
     @Html.DevExpress().TextBoxFor(
             model=> model.BankName ,
            settingsBankName =>
            {
                settingsBankName.ShowModelErrors = true;
                settingsBankName.ControlStyle.CssClass = "editor";
                settingsBankName.ShowModelErrors = true;
                settingsBankName.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settingsBankName.Name = "BankName";
                settingsBankName.Width = 200;
                settingsBankName.Properties.EnableClientSideAPI = true;
            }).GetHtml();

   @Html.DevExpress().Label(
   settingslbl =>{
       settingslbl.Text = "Branch";
       settingslbl.AssociatedControlName = "BranchName";
     }).GetHtml();  
     
     @Html.DevExpress().TextBoxFor(
             model=> model.BranchName ,
            settingsBranchName =>
            {
                settingsBranchName.ShowModelErrors = true;
                settingsBranchName.ControlStyle.CssClass = "editor";
                settingsBranchName.ShowModelErrors = true;
                settingsBranchName.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settingsBranchName.Name = "BranchName";
                settingsBranchName.Width = 200;
                settingsBranchName.Properties.EnableClientSideAPI = true;
            }).GetHtml();
            
          
    @Html.DevExpress().LabelFor(
            model=> model.TermTotal,
            settingsTermTotal => {
                settingsTermTotal.ControlStyle.CssClass = "label";
                settingsTermTotal.Text = "Term Total";
                settingsTermTotal.AssociatedControlName = "TermTotal";
            }
        ).GetHtml();
    @Html.DevExpress().TextBoxFor(
            model => model.TermTotal,
            settingsTermTotal => {
                settingsTermTotal.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settingsTermTotal.ReadOnly = true;
                
            }).GetHtml();

    @Html.DevExpress().LabelFor(
            model=> model.FineAmount,
            settingsFineAmount => {
                settingsFineAmount.ControlStyle.CssClass = "label";
                settingsFineAmount.Text = "Fine Amount";
                settingsFineAmount.AssociatedControlName = "FineAmount";
            }
        ).GetHtml();
    @Html.DevExpress().TextBoxFor(
            model => model.FineAmount,
            settingsFineAmount => {
                settingsFineAmount.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settingsFineAmount.ReadOnly = true;
                
            }).GetHtml();

    @Html.DevExpress().LabelFor(
            model=> model.OtherAmount,
            settingsOtherAmount => {
                settingsOtherAmount.ControlStyle.CssClass = "label";
                settingsOtherAmount.Text = "Other Amount";
                settingsOtherAmount.AssociatedControlName = "OtherAmount";
            }
        ).GetHtml();
    @Html.DevExpress().TextBoxFor(
            model => model.OtherAmount,
            settingsOtherAmount => {
                settingsOtherAmount.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settingsOtherAmount.ReadOnly = true;
                
            }).GetHtml();

    @Html.DevExpress().LabelFor(
            model=> model.FinalAmount,
            settingsFinalAmount => {
                settingsFinalAmount.ControlStyle.CssClass = "label";
                settingsFinalAmount.Text = "FinalAmount";
                settingsFinalAmount.AssociatedControlName = "FinalAmount";
            }
        ).GetHtml();
    @Html.DevExpress().TextBoxFor(
            model => model.FinalAmount,
            settingsFinalAmount => {
                settingsFinalAmount.ControlStyle.CssClass = "editor";
                //settings.ShowModelErrors = true;
                //settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                settingsFinalAmount.ReadOnly = true;
                
            }).GetHtml();

       @Html.DevExpress().Button(
        settingsbtn => {
            settingsbtn.Name = "btnSaveFeeReceipt";
            settingsbtn.ControlStyle.CssClass = "button";
            settingsbtn.Text = "Save Receipt";
            
            settingsbtn.UseSubmitBehavior = true;
        }).GetHtml();
    
        @Html.ValidationMessageFor(model=> model.StudentName) ;
        @Html.ValidationMessageFor(model => model.FatherName); 
          
            
            
            
            
            //ViewContext.Writer.Write("<div id='GridStudentListForFeeID' class='FTBottom'>");
          
            //ViewContext.Writer.Write("</div>");
            
            
            //ViewContext.Writer.Write("<div class='FTtop' id='FTTopID'>");

          

            //ViewContext.Writer.Write("</div>");
            //ViewContext.Writer.Write("<div>");

         
            
        });
    });

    settings.Panes.Add(subpane => {
        subpane.Name = "MiddleCenter";
        subpane.PaneStyle.CssClass = "contentPane";
        subpane.ScrollBars = System.Web.UI.WebControls.ScrollBars.Auto;
        subpane.Separator.Visible = DefaultBoolean.True;
        subpane.Separator.SeparatorStyle.Border.BorderWidth = System.Web.UI.WebControls.Unit.Pixel(0);
        subpane.Separator.SeparatorStyle.BorderTop.BorderWidth = System.Web.UI.WebControls.Unit.Pixel(0);
        subpane.PaneStyle.Paddings.Padding = System.Web.UI.WebControls.Unit.Pixel(5);
       
        subpane.SetContent(() =>
        {

            @Html.Partial("ListHeadView", new UnitOfWork().StudentFeesDetailService.GetStudentFeesDetailByTermIDandStudentID(Model.StudentID, Model.TermId, int.Parse(Session["SessionID"].ToString())));
            
            
        });
    });
   
    

}).GetHtml()*@













































































